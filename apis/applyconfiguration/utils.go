// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	planternephioorgv1alpha1 "github.com/tliron/planter/apis/applyconfiguration/planter.nephio.org/v1alpha1"
	v1alpha1 "github.com/tliron/planter/resources/planter.nephio.org/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=planter.nephio.org, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("Cluster"):
		return &planternephioorgv1alpha1.ClusterApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ClusterNode"):
		return &planternephioorgv1alpha1.ClusterNodeApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ClusterSpec"):
		return &planternephioorgv1alpha1.ClusterSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ClusterStatus"):
		return &planternephioorgv1alpha1.ClusterStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Seed"):
		return &planternephioorgv1alpha1.SeedApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SeedSpec"):
		return &planternephioorgv1alpha1.SeedSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SeedStatus"):
		return &planternephioorgv1alpha1.SeedStatusApplyConfiguration{}

	}
	return nil
}
